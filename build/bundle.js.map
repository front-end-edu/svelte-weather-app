{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/@kurkle/color/dist/color.esm.js","../../node_modules/chart.js/dist/chunks/helpers.segment.js","../../node_modules/chart.js/dist/chart.js","../../src/App.svelte","../../node_modules/chart.js/auto/auto.js","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.2\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.2\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.2\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","<script>\r\n  import { onMount } from 'svelte';\r\n  import Chart from 'chart.js/auto';\r\n\r\n  let map;\r\n  let weatherData = [];\r\n  let isLoading = false;\r\n  let errorMessage = '';\r\n  let searchInput = '';\r\n  let currentAddress = '';\r\n  let currentMarker = null;\r\n  let searchResults = []; // 검색 결과를 저장할 배열로 수정\r\n  let weatherChart; // 차트 인스턴스를 저장할 변수\r\n\r\n  async function fetchWeatherData(lat, lon) {\r\n    const API_KEY = '1e657dc0d8ee9f105075aab7719defa8';\r\n    const units = 'metric';\r\n    const url = `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&units=${units}&appid=${API_KEY}`;\r\n\r\n    isLoading = true;\r\n    try {\r\n      const response = await fetch(url);\r\n      if (!response.ok) throw new Error('API 호출에 실패했습니다: ' + response.statusText);\r\n\r\n      const data = await response.json();\r\n      weatherData = data.list.map((forecast) => ({\r\n        date: new Date(forecast.dt * 1000).toLocaleString(),\r\n        temperature: forecast.main.temp,\r\n        humidity: forecast.main.humidity,\r\n        windSpeed: forecast.wind.speed,\r\n        clouds: forecast.clouds.all,\r\n      }));\r\n      updateWeatherChart();\r\n    } catch (error) {\r\n      console.error('날씨 정보를 불러오는 중 오류가 발생했습니다:', error);\r\n      errorMessage = '날씨 정보를 불러오는 중 오류가 발생했습니다: ' + error.message;\r\n    } finally {\r\n      isLoading = false;\r\n    }\r\n  }\r\n\r\n  async function loadNaverMapsAPI() {\r\n    return new Promise((resolve, reject) => {\r\n      const script = document.createElement('script');\r\n      script.src = 'https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=tbl2cislwz&submodules=geocoder';\r\n      script.async = true;\r\n      script.onload = () => resolve();\r\n      script.onerror = () => reject(new Error('네이버 지도 로드 실패'));\r\n      document.head.appendChild(script);\r\n    });\r\n  }\r\n\r\n  onMount(async () => {\r\n    await loadNaverMapsAPI();\r\n\r\n    const mapOptions = {\r\n      center: new naver.maps.LatLng(37.5665, 126.978),\r\n      zoom: 10,\r\n    };\r\n    map = new naver.maps.Map('map', mapOptions);\r\n\r\n    naver.maps.Event.addListener(map, 'click', async function (e) {\r\n      const lat = e.coord.lat();\r\n      const lon = e.coord.lng();\r\n\r\n      // 역지오코딩을 통해 주소 정보를 가져옵니다.\r\n      const navermaps = window.naver.maps;\r\n      await navermaps.Service.reverseGeocode(\r\n        {\r\n          location: new navermaps.LatLng(lat, lon),\r\n        },\r\n        function (status, response) {\r\n          if (status !== navermaps.Service.Status.OK) {\r\n            console.log('Something went wrong!', status);\r\n            return;\r\n          }\r\n\r\n          const result = response.result;\r\n          currentAddress = result.items[0].address; // 첫 번째 결과의 주소를 사용합니다.\r\n          addMarker(lat, lon);\r\n          fetchWeatherData(lat, lon);\r\n        }\r\n      );\r\n    });\r\n  });\r\n\r\n  // 주소 검색 기능을 수정하여 검색 결과를 searchResults에 저장\r\n  async function searchAddress() {\r\n    if (!searchInput.trim()) return;\r\n    isLoading = true;\r\n    errorMessage = '';\r\n    searchResults = []; // 검색 전 결과 초기화\r\n\r\n    const navermaps = window.naver.maps;\r\n\r\n    try {\r\n      const response = await new Promise((resolve, reject) => {\r\n        navermaps.Service.geocode({ query: searchInput }, function (status, response) {\r\n          if (status === navermaps.Service.Status.ERROR) {\r\n            reject(new Error('검색 결과를 찾을 수 없습니다.'));\r\n          } else {\r\n            resolve(response);\r\n          }\r\n        });\r\n      });\r\n\r\n      // 검색 결과 중 최대 10개까지만 searchResults 배열에 저장\r\n      searchResults = response.v2.addresses.slice(0, 10).map((address) => ({\r\n        label: address.roadAddress || address.jibunAddress, // 도로명 주소 또는 지번 주소\r\n        x: address.x,\r\n        y: address.y,\r\n      }));\r\n    } catch (error) {\r\n      errorMessage = error.message;\r\n    } finally {\r\n      isLoading = false;\r\n    }\r\n  }\r\n\r\n  // 마커 추가 기능\r\n  function addMarker(lat, lon) {\r\n    // 새 마커를 추가하기 전에 현재 마커가 있다면 지웁니다.\r\n    if (currentMarker) {\r\n      currentMarker.setMap(null); // 현재 마커를 지도에서 제거\r\n    }\r\n\r\n    // 사용자 지정 마커 이미지 URL\r\n    const markerImageUrl = './marker.png'; // 여기서 이미지 URL을 자신의 것으로 교체하세요.\r\n\r\n    // 새로운 마커 생성\r\n    currentMarker = new naver.maps.Marker({\r\n      position: new naver.maps.LatLng(lat, lon),\r\n      map: map,\r\n      icon: {\r\n        content: `<img src=\"${markerImageUrl}\" alt=\"Marker\" style=\"width: 30px; height: 87.7px;\">`, // 마커 이미지와 크기 설정\r\n        anchor: new naver.maps.Point(15, 43.85), // 이미지의 중심점 설정. 여기서는 이미지 크기의 절반 값을 사용하여 중앙 아래 지점이 위치 지정점이 되도록 함\r\n      },\r\n    });\r\n\r\n    // 마커를 추가한 위치의 날씨 데이터를 가져옵니다.\r\n    fetchWeatherData(lat, lon); // 함수 이름을 올바르게 수정\r\n  }\r\n\r\n  // 검색 결과 중 하나를 선택했을 때 실행될 함수\r\n  function selectAddress(address) {\r\n    currentAddress = address.label;\r\n    map.setCenter(new naver.maps.LatLng(address.y, address.x));\r\n    addMarker(address.y, address.x);\r\n    fetchWeatherData(address.y, address.x);\r\n    searchResults = []; // 검색 결과 초기화\r\n  }\r\n\r\n  function updateWeatherChart() {\r\n    const ctx = document.getElementById('weatherChart').getContext('2d');\r\n    if (weatherChart) {\r\n      weatherChart.data.labels = weatherData.map((data) => data.date.slice(0, 10));\r\n      weatherChart.data.datasets[0].data = weatherData.map((data) => data.temperature);\r\n      weatherChart.update();\r\n    } else {\r\n      weatherChart = new Chart(ctx, {\r\n        type: 'line',\r\n        data: {\r\n          labels: weatherData.map((data) => data.date.slice(0, 10)),\r\n          datasets: [\r\n            {\r\n              label: '온도 (°C)',\r\n              data: weatherData.map((data) => data.temperature),\r\n              borderColor: 'rgb(75, 192, 192)',\r\n              tension: 0.1,\r\n            },\r\n          ],\r\n        },\r\n        options: {\r\n          scales: {\r\n            y: {\r\n              beginAtZero: false,\r\n            },\r\n          },\r\n        },\r\n      });\r\n    }\r\n  }\r\n</script>\r\n\r\n<main>\r\n  <div id=\"map\" style=\"width: 100%; height: 400px;\"></div>\r\n  <input type=\"text\" bind:value={searchInput} placeholder=\"주소 검색...\" />\r\n  <button on:click={searchAddress}>검색</button>\r\n  {#if searchResults.length}\r\n    <ul>\r\n      {#each searchResults as result}\r\n        <li on:click={() => selectAddress(result)}>{result.label}</li>\r\n      {/each}\r\n    </ul>\r\n  {/if}\r\n  {#if isLoading}\r\n    <p>날씨 정보를 불러오는 중....</p>\r\n  {:else if errorMessage}\r\n    <p>{errorMessage}</p>\r\n  {:else if weatherData.length > 0}\r\n    <div>\r\n      <h2>날씨 정보</h2>\r\n      <!-- 당일 날씨 정보 표시 -->\r\n      <div>\r\n        <p><strong>당일 날씨:</strong></p>\r\n        <p>날짜: {weatherData[0].date}</p>\r\n        <p>주소: {currentAddress}</p>\r\n        <p>온도: {weatherData[0].temperature}</p>\r\n        <p>습도: {weatherData[0].humidity}</p>\r\n        <p>풍속: {weatherData[0].windSpeed}</p>\r\n        <p>구름양: {weatherData[0].clouds}</p>\r\n      </div>\r\n      <!-- 이후 날씨 정보 표 형태로 표시 -->\r\n      {#if weatherData.length > 1}\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>날짜</th>\r\n              <th>온도</th>\r\n              <th>습도</th>\r\n              <th>풍속</th>\r\n              <th>구름양</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {#each weatherData.slice(1) as data, index}\r\n              <tr>\r\n                <td>{data.date}</td>\r\n                <td>{data.temperature}</td>\r\n                <td>{data.humidity}</td>\r\n                <td>{data.windSpeed}</td>\r\n                <td>{data.clouds}</td>\r\n              </tr>\r\n            {/each}\r\n          </tbody>\r\n        </table>\r\n      {/if}\r\n    </div>\r\n  {/if}\r\n  <div>\r\n    <canvas id=\"weatherChart\"></canvas>\r\n  </div>\r\n</main>\r\n\r\n<style>\r\n  main {\r\n    text-align: center;\r\n    padding: 1em;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  #map {\r\n    height: 400px;\r\n  }\r\n\r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n\r\n  th,\r\n  td {\r\n    text-align: left;\r\n    padding: 8px;\r\n    border: 1px solid #ddd;\r\n  }\r\n\r\n  th {\r\n    background-color: #f2f2f2;\r\n  }\r\n</style>\r\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n\ttarget: document.body,\r\n\tprops: {\r\n\t\tname: 'world'\r\n\t}\r\n});\r\n\r\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","set_input_value","input","set_style","key","important","style","removeProperty","setProperty","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","e","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","destroy_component","filtered","targets","c","indexOf","flush_render_callbacks","on_destroy","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","block","delete","local","customElement","m","new_on_destroy","map","filter","mount_component","SvelteComponent","$destroy","this","$on","type","index","splice","$set","$$props","obj","$$set","keys","round","v","lim","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","isArray","hsl2rgb","hue","hueParse","str","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","modHSL","ratio","tmp","clone","proto","assign","fromObject","functionParse","charAt","rgbParse","Color","constructor","len","_rgb","_valid","valid","rgbString","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","uid","id","isNullOrUndef","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","source","klen","isValidKey","_merger","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","_arrayUnique","items","set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","platform","getDevicePixelRatio","elements","events","font","family","lineHeight","hover","hoverBackgroundColor","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","join","_resolveScriptable","isIndexable","arr","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","_getParentNode","domNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","useOffsetPos","shadowRoot","getRelativePosition","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","elapsed","wait","promises","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","controllers","__proto__","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","abstract","DateAdapterBase","members","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","renderWidth","displayWidth","displayHeight","initCanvas","proxies","$proxies","attach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","BarElement","addRectPath","mouseX","mouseY","inXRange","inYRange","PointElement","hoverRadius","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","colorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","CategoryScale","_addedLabels","added","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","ul","t_value","li","temperature","humidity","windSpeed","clouds","create_if_block_3","div1","div0","p3","p5","p6","t5","t5_value","t11","t11_value","t14","t14_value","t17","t17_value","t20","t20_value","thead","tbody","t0_value","t2_value","t4_value","t6_value","t8_value","tr","td0","td1","td2","td3","td4","t0","t2","t4","t6","t8","if_block0","create_if_block_4","create_if_block","create_if_block_1","create_if_block_2","main","button","weatherChart","weatherData","isLoading","errorMessage","searchInput","currentAddress","currentMarker","searchResults","fetchWeatherData","lat","lon","url","$$invalidate","response","fetch","statusText","json","list","forecast","dt","toLocaleString","temp","wind","speed","updateWeatherChart","message","addMarker","setMap","naver","maps","Marker","LatLng","icon","content","Point","selectAddress","address","setCenter","async","reject","script","onload","onerror","loadNaverMapsAPI","mapOptions","zoom","Event","coord","lng","navermaps","Service","reverseGeocode","location","status","Status","OK","log","trim","geocode","query","ERROR","addresses","roadAddress","jibunAddress"],"mappings":"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","x_google_ignoreList":[0,1,2,3,5]}